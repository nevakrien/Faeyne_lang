.section .text.faeyne_lang::main,"ax",@progbits
	.p2align	4, 0x90
	.type	faeyne_lang::main,@function
faeyne_lang::main:
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/main.rs : 7
		fn main() {
	.cfi_startproc
	.cfi_personality 155, DW.ref.rust_eh_personality
	.cfi_lsda 27, .Lexception0
	push rbp
	.cfi_def_cfa_offset 16
	push r15
	.cfi_def_cfa_offset 24
	push r14
	.cfi_def_cfa_offset 32
	push r13
	.cfi_def_cfa_offset 40
	push r12
	.cfi_def_cfa_offset 48
	push rbx
	.cfi_def_cfa_offset 56
	sub rsp, 136
	.cfi_def_cfa_offset 192
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	.cfi_offset rbp, -16
	lea rdi, [rsp + 8]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/main.rs : 9
		let mut stack: Stack = Stack::with_capacity(STACK_SIZE);
	mov esi, 1000000
	call qword ptr [rip + faeyne_lang::stack::Stack::with_capacity@GOTPCREL]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/main.rs : 11
		let start = Instant::now();
	call qword ptr [rip + std::time::Instant::now@GOTPCREL]
	mov qword ptr [rsp + 40], rax
	mov dword ptr [rsp + 48], edx
	xor eax, eax
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 114
		let end = self.len + 8;
	mov r15, qword ptr [rsp + 16]
	lea rsi, [rip + .LJTI7_0]
	lea rdi, [rip + .LJTI7_1]
	lea r9, [rip + .LJTI7_2]
	lea r10, [rip + .LJTI7_3]
	lea r11, [rip + .LJTI7_4]
	lea rbx, [rip + .LJTI7_5]
	lea r14, [rip + .LJTI7_6]
	jmp .LBB7_2
	.p2align	4, 0x90
.LBB7_6:
	mov rax, qword ptr [rsp + 32]
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/cmp.rs : 1571
		fn lt(&self, other: &$t) -> bool { (*self) < (*other) }
	cmp eax, 100
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/iter/range.rs : 753
		if self.start < self.end {
	je .LBB7_7
.LBB7_2:
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/num/int_macros.rs : 2155
		let (a, b) = intrinsics::add_with_overflow(self as $ActualT, rhs as $ActualT);
	inc eax
	mov qword ptr [rsp + 32], rax
	mov r12d, 4
	xor r13d, r13d
	xor ebp, ebp
	.p2align	4, 0x90
.LBB7_3:
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 116
		if end <= self.capacity {
	lea rdx, [r15 + r13]
	add rdx, 8
	mov rcx, qword ptr [rsp + 24]
	cmp rdx, rcx
	ja .LBB7_5
	mov r8, qword ptr [rsp + 8]
	lea rax, [r15 + r13]
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/ptr/mod.rs : 1506
		intrinsics::write_via_move(dst, src)
	mov qword ptr [r8 + rax], rbp
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 126
		self.len = end;
	mov qword ptr [rsp + 16], rdx
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 116
		if end <= self.capacity {
	lea rdx, [r15 + r13]
	add rdx, 16
	cmp rdx, rcx
	ja .LBB7_5
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/ptr/mod.rs : 1506
		intrinsics::write_via_move(dst, src)
	mov qword ptr [r8 + rax + 8], 6
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 126
		self.len = end;
	mov qword ptr [rsp + 16], rdx
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 116
		if end <= self.capacity {
	lea rcx, [r15 + r13]
	add rcx, 24
	cmp rcx, qword ptr [rsp + 24]
	ja .LBB7_67
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/value.rs : 90
		IRValue::Bool(val) => self.push_bool(*val),
	mov edx, ebp
	and edx, 1
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/value.rs : 238
		let tag = if val {
	or rdx, 2
	mov r8, qword ptr [rsp + 8]
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/ptr/mod.rs : 1506
		intrinsics::write_via_move(dst, src)
	mov qword ptr [r8 + rax + 16], rdx
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 126
		self.len = end;
	mov qword ptr [rsp + 16], rcx
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 116
		if end <= self.capacity {
	lea rax, [r15 + r13]
	add rax, 32
	cmp rax, qword ptr [rsp + 24]
	ja .LBB7_69
	mov rcx, qword ptr [rsp + 8]
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/ptr/mod.rs : 1506
		intrinsics::write_via_move(dst, src)
	add rcx, r15
	mov qword ptr [r13 + rcx + 24], r12
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 126
		self.len = end;
	mov qword ptr [rsp + 16], rax
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/cmp.rs : 1571
		fn lt(&self, other: &$t) -> bool { (*self) < (*other) }
	add r13, 32
	movabs rax, 4294967296
	add r12, rax
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/num/int_macros.rs : 2155
		let (a, b) = intrinsics::add_with_overflow(self as $ActualT, rhs as $ActualT);
	inc rbp
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/cmp.rs : 1571
		fn lt(&self, other: &$t) -> bool { (*self) < (*other) }
	cmp r13, 3200
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/iter/range.rs : 753
		if self.start < self.end {
	jne .LBB7_3
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 116
		if end <= self.capacity {
	add r15, r13
	mov ebp, 1000000
	movabs r8, 30064771076
	jmp .LBB7_29
	.p2align	4, 0x90
.LBB7_64:
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/cmp.rs : 1571
		fn lt(&self, other: &$t) -> bool { (*self) < (*other) }
	dec ebp
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/iter/range.rs : 753
		if self.start < self.end {
	je .LBB7_65
.LBB7_29:
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 114
		let end = self.len + 8;
	lea rcx, [r15 + 8]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 116
		if end <= self.capacity {
	mov rax, qword ptr [rsp + 24]
	cmp rcx, rax
	ja .LBB7_31
	mov rdx, qword ptr [rsp + 8]
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/ptr/mod.rs : 1506
		intrinsics::write_via_move(dst, src)
	mov qword ptr [rdx + r15], 42
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 126
		self.len = end;
	mov qword ptr [rsp + 16], rcx
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 114
		let end = self.len + 8;
	lea r12, [r15 + 16]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 116
		if end <= self.capacity {
	cmp r12, rax
	ja .LBB7_31
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/ptr/mod.rs : 1506
		intrinsics::write_via_move(dst, src)
	mov qword ptr [rdx + r15 + 8], 6
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 126
		self.len = end;
	mov qword ptr [rsp + 16], r12
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 114
		let end = self.len + 8;
	lea rax, [r15 + 24]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 116
		if end <= self.capacity {
	cmp rax, qword ptr [rsp + 24]
	ja .LBB7_35
	mov rcx, qword ptr [rsp + 8]
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/ptr/mod.rs : 1506
		intrinsics::write_via_move(dst, src)
	mov qword ptr [rcx + r15 + 16], 2
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 126
		self.len = end;
	mov qword ptr [rsp + 16], rax
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 114
		let end = self.len + 8;
	add r15, 32
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 116
		if end <= self.capacity {
	cmp r15, qword ptr [rsp + 24]
	ja .LBB7_37
	mov rcx, qword ptr [rsp + 8]
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/ptr/mod.rs : 1506
		intrinsics::write_via_move(dst, src)
	mov qword ptr [rcx + rax], r8
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 126
		self.len = end;
	mov qword ptr [rsp + 16], r15
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 148
		if self.len >= 8 {
	cmp r15, 8
	jb .LBB7_43
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 149
		self.len -= 8;
	mov qword ptr [rsp + 16], rax
	mov r15, qword ptr [rsp + 8]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 155
		data[i] = self.data.as_ptr().add(start + i).read();
	mov ecx, dword ptr [r15 + rax]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/value.rs : 24
		match value {
	dec ecx
	cmp ecx, 7
	ja .LBB7_43
	movsxd rcx, dword ptr [rsi + 4*rcx]
	add rcx, rsi
	jmp rcx
	mov r12, rax
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 148
		if self.len >= 8 {
	cmp r12, 8
	jae .LBB7_46
	jmp .LBB7_49
	.p2align	4, 0x90
	cmp rax, 7
	jbe .LBB7_43
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 149
		self.len -= 8;
	mov qword ptr [rsp + 16], r12
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 148
		if self.len >= 8 {
	cmp r12, 8
	jb .LBB7_49
.LBB7_46:
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 149
		self.len -= 8;
	lea r13, [r12 - 8]
	mov qword ptr [rsp + 16], r13
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 155
		data[i] = self.data.as_ptr().add(start + i).read();
	mov eax, dword ptr [r15 + r12 - 8]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/value.rs : 24
		match value {
	dec eax
	cmp eax, 7
	ja .LBB7_49
	movsxd rax, dword ptr [rdi + 4*rax]
	add rax, rdi
	jmp rax
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 114
		let end = self.len + 8;
	lea rax, [r13 + 8]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 116
		if end <= self.capacity {
	cmp rax, qword ptr [rsp + 24]
	ja .LBB7_52
.LBB7_53:
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/ptr/mod.rs : 1506
		intrinsics::write_via_move(dst, src)
	movabs rax, 425201762309
	mov qword ptr [r15 + r13], rax
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 149
		self.len -= 8;
	mov qword ptr [rsp + 16], r13
	mov r12, qword ptr [rsp + 8]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 155
		data[i] = self.data.as_ptr().add(start + i).read();
	mov eax, dword ptr [r12 + r13]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/value.rs : 24
		match value {
	dec eax
	cmp eax, 7
	ja .LBB7_56
	movsxd rax, dword ptr [r9 + 4*rax]
	add rax, r9
	jmp rax
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 148
		if self.len >= 8 {
	cmp r13, 8
	jb .LBB7_62
.LBB7_59:
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 149
		self.len -= 8;
	lea r15, [r13 - 8]
	mov qword ptr [rsp + 16], r15
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 155
		data[i] = self.data.as_ptr().add(start + i).read();
	mov eax, dword ptr [r12 + r13 - 8]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/value.rs : 24
		match value {
	dec eax
	cmp eax, 7
	ja .LBB7_62
	movsxd rax, dword ptr [r10 + 4*rax]
	add rax, r10
	jmp rax
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 148
		if self.len >= 8 {
	cmp r15, 7
	jbe .LBB7_62
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 149
		self.len -= 8;
	add r13, -16
	mov qword ptr [rsp + 16], r13
	mov r15, r13
	jmp .LBB7_64
	.p2align	4, 0x90
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 148
		if self.len >= 8 {
	cmp r13, 7
	jbe .LBB7_49
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 149
		self.len -= 8;
	add r12, -16
	mov qword ptr [rsp + 16], r12
	mov r13, r12
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 114
		let end = self.len + 8;
	lea rax, [r13 + 8]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 116
		if end <= self.capacity {
	cmp rax, qword ptr [rsp + 24]
	jbe .LBB7_53
	jmp .LBB7_52
	.p2align	4, 0x90
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 148
		if self.len >= 8 {
	cmp r13, 7
	jbe .LBB7_56
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 149
		self.len -= 8;
	add r13, -8
	mov qword ptr [rsp + 16], r13
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 148
		if self.len >= 8 {
	cmp r13, 8
	jae .LBB7_59
	jmp .LBB7_62
	.p2align	4, 0x90
.LBB7_65:
	mov ebp, 100
	jmp .LBB7_10
	.p2align	4, 0x90
.LBB7_27:
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 149
		self.len -= 8;
	add rax, -16
	mov qword ptr [rsp + 16], rax
	mov r15, rax
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/cmp.rs : 1571
		fn lt(&self, other: &$t) -> bool { (*self) < (*other) }
	dec ebp
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/iter/range.rs : 753
		if self.start < self.end {
	je .LBB7_6
.LBB7_10:
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 148
		if self.len >= 8 {
	cmp r15, 8
	jb .LBB7_14
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 149
		self.len -= 8;
	lea r13, [r15 - 8]
	mov qword ptr [rsp + 16], r13
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 155
		data[i] = self.data.as_ptr().add(start + i).read();
	mov eax, dword ptr [r12 + r15 - 8]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/value.rs : 24
		match value {
	dec eax
	cmp eax, 7
	ja .LBB7_14
	movsxd rax, dword ptr [r11 + 4*rax]
	add rax, r11
	jmp rax
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 148
		if self.len >= 8 {
	cmp r13, 8
	jb .LBB7_20
.LBB7_17:
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 149
		self.len -= 8;
	lea rax, [r13 - 8]
	mov qword ptr [rsp + 16], rax
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 155
		data[i] = self.data.as_ptr().add(start + i).read();
	mov ecx, dword ptr [r12 + r13 - 8]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/value.rs : 24
		match value {
	dec ecx
	cmp ecx, 7
	ja .LBB7_20
	movsxd rcx, dword ptr [rbx + 4*rcx]
	add rcx, rbx
	jmp rcx
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 148
		if self.len >= 8 {
	cmp rax, 8
	jb .LBB7_26
.LBB7_23:
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 149
		self.len -= 8;
	lea r15, [rax - 8]
	mov qword ptr [rsp + 16], r15
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 155
		data[i] = self.data.as_ptr().add(start + i).read();
	mov ecx, dword ptr [r12 + rax - 8]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/value.rs : 24
		match value {
	dec ecx
	cmp ecx, 7
	ja .LBB7_26
	movsxd rcx, dword ptr [r14 + 4*rcx]
	add rcx, r14
	jmp rcx
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 148
		if self.len >= 8 {
	cmp r15, 7
	ja .LBB7_27
	jmp .LBB7_26
	.p2align	4, 0x90
	cmp r13, 7
	jbe .LBB7_14
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 149
		self.len -= 8;
	add r15, -16
	mov qword ptr [rsp + 16], r15
	mov r13, r15
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 148
		if self.len >= 8 {
	cmp r13, 8
	jae .LBB7_17
	jmp .LBB7_20
	.p2align	4, 0x90
	cmp rax, 7
	jbe .LBB7_20
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 149
		self.len -= 8;
	add r13, -16
	mov qword ptr [rsp + 16], r13
	mov rax, r13
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/stack.rs : 148
		if self.len >= 8 {
	cmp rax, 8
	jae .LBB7_23
.LBB7_26:
	lea r8, [rip + .L__unnamed_4]
	jmp .LBB7_32
.LBB7_7:
	lea rdi, [rsp + 40]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/main.rs : 44
		let duration = start.elapsed();
	call qword ptr [rip + std::time::Instant::elapsed@GOTPCREL]
	mov qword ptr [rsp + 56], rax
	mov dword ptr [rsp + 64], edx
	lea rax, [rsp + 56]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/main.rs : 45
		println!("Performance test completed in: {:?}", duration);
	mov qword ptr [rsp + 72], rax
	mov rax, qword ptr [rip + <core::time::Duration as core::fmt::Debug>::fmt@GOTPCREL]
	mov qword ptr [rsp + 80], rax
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/fmt/mod.rs : 343
		Arguments { pieces, fmt: None, args }
	lea rax, [rip + .L__unnamed_5]
	mov qword ptr [rsp + 88], rax
	mov qword ptr [rsp + 96], 2
	mov qword ptr [rsp + 120], 0
	lea rax, [rsp + 72]
	mov qword ptr [rsp + 104], rax
	mov qword ptr [rsp + 112], 1
	lea rdi, [rsp + 88]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/main.rs : 45
		println!("Performance test completed in: {:?}", duration);
	call qword ptr [rip + std::io::stdio::_print@GOTPCREL]
	lea rdi, [rsp + 8]
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/ptr/mod.rs : 514
		pub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) {
	call qword ptr [rip + <faeyne_lang::stack::Stack as core::ops::drop::Drop>::drop@GOTPCREL]
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/main.rs : 46
		}
	add rsp, 136
	.cfi_def_cfa_offset 56
	pop rbx
	.cfi_def_cfa_offset 48
	pop r12
	.cfi_def_cfa_offset 40
	pop r13
	.cfi_def_cfa_offset 32
	pop r14
	.cfi_def_cfa_offset 24
	pop r15
	.cfi_def_cfa_offset 16
	pop rbp
	.cfi_def_cfa_offset 8
	ret
.LBB7_5:
	.cfi_def_cfa_offset 192
	lea r8, [rip + .L__unnamed_6]
	jmp .LBB7_32
.LBB7_31:
	lea r8, [rip + .L__unnamed_7]
	jmp .LBB7_32
.LBB7_49:
	lea r8, [rip + .L__unnamed_8]
	jmp .LBB7_32
.LBB7_62:
	lea r8, [rip + .L__unnamed_9]
	jmp .LBB7_32
.LBB7_43:
	lea r8, [rip + .L__unnamed_10]
	jmp .LBB7_32
.LBB7_20:
	lea r8, [rip + .L__unnamed_11]
	jmp .LBB7_32
.LBB7_14:
	lea r8, [rip + .L__unnamed_12]
	jmp .LBB7_32
.LBB7_67:
	lea r8, [rip + .L__unnamed_13]
	jmp .LBB7_32
.LBB7_69:
	lea r8, [rip + .L__unnamed_14]
	jmp .LBB7_32
.LBB7_52:
	lea r8, [rip + .L__unnamed_15]
	jmp .LBB7_32
.LBB7_35:
	lea r8, [rip + .L__unnamed_16]
	jmp .LBB7_32
.LBB7_37:
	lea r8, [rip + .L__unnamed_17]
	jmp .LBB7_32
.LBB7_56:
	lea r8, [rip + .L__unnamed_18]
.LBB7_32:
	lea rdi, [rip + .L__unnamed_19]
	lea rcx, [rip + .L__unnamed_2]
	lea rdx, [rsp + 88]
	mov esi, 43
	call qword ptr [rip + core::result::unwrap_failed@GOTPCREL]
	ud2
	mov rbx, rax
	lea rdi, [rsp + 8]
		// /rustc/129f3b9964af4d4a709d1383930ade12dfe7c081/library/core/src/ptr/mod.rs : 514
		pub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) {
	call qword ptr [rip + <faeyne_lang::stack::Stack as core::ops::drop::Drop>::drop@GOTPCREL]
	mov rdi, rbx
	call _Unwind_Resume@PLT
		// /home/user/Desktop/rust_stuff/Faeyne_lang_dev/src/main.rs : 7
		fn main() {
	call qword ptr [rip + core::panicking::panic_in_cleanup@GOTPCREL]
